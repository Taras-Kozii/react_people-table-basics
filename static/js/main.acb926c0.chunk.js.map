{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","motherInTable","fatherInTable","selectedPerson","name","sex","born","died","slug","motherName","fatherName","classNames","to","PeopleTable","persons","findParent","parentName","find","item","map","PeoplePage","useParams","useState","people","setPeople","isError","setIsError","isLoading","setIsLoading","getPeopleFromServer","peopleFromServer","useEffect","length","HomePage","NotFoundPage","Navbar","role","isActive","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.acb926c0.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  selectedPerson: string,\n  motherInTable: Person | undefined,\n  fatherInTable: Person | undefined,\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  motherInTable,\n  fatherInTable,\n  selectedPerson,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    slug,\n    motherName,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames('',\n        { 'has-background-warning': selectedPerson === slug })}\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={classNames('', { 'has-text-danger': person.sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {motherInTable\n        ? (\n          <td>\n            <Link\n              to={`/people/${motherInTable.slug}`}\n              className={classNames('',\n                { 'has-text-danger': motherInTable.sex === 'f' })}\n            >\n              {motherInTable.name}\n            </Link>\n          </td>\n        )\n        : (\n          <td>\n            {!motherName ? '-' : motherName}\n          </td>\n        )}\n\n      {fatherInTable\n        ? (\n          <td>\n            <Link\n              to={`/people/${fatherInTable.slug}`}\n            >\n              {fatherInTable.name}\n            </Link>\n          </td>\n        )\n        : (\n          <td>\n            {!fatherName ? '-' : fatherName}\n          </td>\n        )}\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  persons: Person[];\n  selectedPerson: string | 0;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ persons, selectedPerson }) => {\n  const findParent = (parentName: string | null) => persons.find(\n    item => (item.name === parentName),\n  );\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {persons.map(person => (\n          <PersonLink\n            person={person}\n            key={person.slug}\n            selectedPerson={`${selectedPerson}`}\n            motherInTable={findParent(person.motherName)}\n            fatherInTable={findParent(person.fatherName)}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable/PeopleTable';\nimport { Person } from '../../types';\n\nexport const PeoplePage = () => {\n  const { slug = 0 } = useParams();\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getPeopleFromServer = async () => {\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {isLoading && <Loader /> }\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!isLoading && !people.length) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length !== 0 && (\n            <PeopleTable persons={people} selectedPerson={slug} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => classNames(\n            'navbar-item', { 'has-background-grey-lighter': isActive },\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => classNames(\n            'navbar-item', { 'has-background-grey-lighter': isActive },\n          )}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { PeoplePage } from './pages/PeoplePage/PeoplePage';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage/NotFoundPage';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"*\" element={<NotFoundPage />} />\n\n            <Route path=\"people\">\n              <Route\n                index\n                element={(\n                  <PeoplePage />\n                )}\n              />\n              <Route\n                path=\":slug\"\n                element={(\n                  <PeoplePage />\n                )}\n              />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}